services:
  nuxt:
    container_name: nuxt
    build: nginx/nuxt
    volumes:
      - ./sinohiroHPv4:/app:cached
      - nuxt_node_modules:/app/node_modules
    ports:
      - "3000:3000"
      - "24678:24678"
    tty: true
    environment:
      - HOST=0.0.0.0
      - port=3000
      - CHOKIDAR_USEPOLLING=true
#    command: sh -c "yarn && yarn dev"
    networks:
      docker-network:
        ipv4_address: 172.19.0.19

  sinohiro-HP:
    container_name: sinohiro-HP
    image: nginx:latest
    restart: always
    ports:
      - "80"
    networks:
      docker-network:
        ipv4_address: 172.19.0.14
    environment:
      - VIRTUAL_HOST=sinohiro.f5.si, 192.168.1.*, sinohiro.dip.jp, sinohiro.net
      - LETSENCRYPT_HOST=sinohiro.f5.si, sinohiro.net
      - LETSENCRYPT_EMAIL=sinohiro966@gmail.com
    volumes:
      - ./sinohiroHP/dist:/var/www/html
      - ./nginx/Build_WebGL2:/var/www/html/Build_WebGL
      - ./nginx/speedtest:/var/www/html/speedtest
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/conf.d/server.conf
  php:
    container_name: php7.2
    image: php:7-fpm
    restart: always
    networks:
      docker-network:
        ipv4_address: 172.19.0.15
    volumes: 
      - ./sinohiroHP/dist:/var/www/html
      - ./nginx/Build_WebGL:/var/www/html/Build_WebGL
      - ./nginx/speedtest:/var/www/html/speedtest
      - ./php/php.ini:/usr/local/etc/php/php.ini

  # ecloud:
  #   build:
  #     context: ./nginx/ecloud
  #   container_name: ecloud
  #   image: nextcloud
  #   restart: always
  #   ports:
  #     - "80"
  #   networks:
  #     docker-network:
  #       ipv4_address: 172.19.0.16
  #   environment:
  #     - MYSQL_HOST=ecloud-db
  #     - PHP_MEMORY_LIMIT=4096M
  #     - PHP_UPLOAD_LIMIT=51200M
  #     - APACHE_DISABLE_REWRITE_IP=1
  #     - APACHE_BODY_LIMIT=0
  #     - TRUSTED_PROXIES=172.19.0.10
  #     - OVERWRITEHOST=ecloud.sinohiro.f5.si
  #     - OVERWRITEPROTOCOL=https
  #     - VIRTUAL_HOST=ecloud.sinohiro.f5.si
  #     - LETSENCRYPT_HOST=ecloud.sinohiro.f5.si
  #     - LETSENCRYPT_EMAIL=sinohiro966@gmail.com
  #   volumes:
  #     - ecloud:/var/www/html
  #     - ./php/max-execution-time.ini:/usr/local/etc/php/conf.d/max-execution-time.ini
  #   links:
  #     - ecloud-db
  #     - redis

  # ecloud-db:
  #   container_name: ecloud-db
  #   image: mariadb
  #   restart: always
  #   networks:
  #     docker-network:
  #       ipv4_address: 172.19.0.17
  #   environment:
  #     - MYSQL_DATABASE=${ECLOUD_DATABASE}
  #     - MYSQL_USER=${ECLOUD_DB_USER}
  #     - MYSQL_PASSWORD=${ECLOUD_DB_PASSWORD}
  #     - MYSQL_ROOT_PASSWORD=${ECLOUD_DB_ROOT_PASSWORD}
  #     - MYSQL_INITDB_SKIP_TZINFO=1
  #     - MYSQL_QUERY_CACHE_SIZE=64M
  #   command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --innodb-file-per-table=1 --skip-innodb-read-only-compressed
  #   tty: true
  #   volumes:
  #     - ecloud-db:/var/lib/mysql
  #     - ./ecloud-db-backup:/tmp/ecloud-backup
  
  # redis:
  #   image: redis
  #   container_name: redis
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     docker-network:
  #       ipv4_address: 172.19.0.18

  # geekcast:
  #   container_name: geekcast
  #   image: wordpress:latest
  #   restart: always
  #   ports:
  #     - "80"
  #   networks:
  #     - docker-network
  #   environment:
  #     - WORDPRESS_DB_HOST=geekcast-db
  #     - WORDPRESS_DB_USER=${GEEKCAST_DB_USER}
  #     - WORDPRESS_DB_PASSWORD=${GEEKCAST_DB_PASSWORD}
  #     - VIRTUAL_HOST=blog.sinohiro.f5.si
  #     - LETSENCRYPT_HOST=blog.sinohiro.f5.si
  #     - LETSENCRYPT_EMAIL=sinohiro966@gmail.com
  #   volumes:
  #     - geekcast:/var/www/html
  #   links:
  #     - geekcast-db
  # geekcast-db:
  #   container_name: geekcast-db
  #   image: mariadb
  #   restart: always
  #   volumes:
  #     - geekcast-db:/var/lib/mysql
  #   environment:
  #     - TZ=Asia/Tokyo
  #     - MYSQL_DATABASE=${GEEKCAST_DATABASE}
  #     - MYSQL_USER=${GEEKCAST_DB_USER}
  #     - MYSQL_PASSWORD=${GEEKCAST_DB_PASSWORD}
  #     - MYSQL_ROOT_PASSWORD=${GEEKCAST_DB_ROOT_PASSWORD}
  #   networks:
  #     - docker-network

  #kitamatch:
  #  container_name: kitamatch
  #  image: wordpress:latest
  #  restart: always
  #  ports:
  #    - "80"
  #  networks:
  #    - docker-network
  #  environment:
  #    - WORDPRESS_DB_HOST=kitamatch-db
  #    - WORDPRESS_DB_USER=${KITAMATCH_DB_USER}
  #    - WORDPRESS_DB_PASSWORD=${KITAMATCH_DB_PASSWORD}
  #    - VIRTUAL_HOST=kitamatch.sinohiro.f5.si
  #    - LETSENCRYPT_HOST=kitamatch.sinohiro.f5.si
  #    - LETSENCRYPT_EMAIL=sinohiro966@gmail.com
  #  volumes:
  #    - kitamatch:/var/www/html
  #    - ./php/php.ini:/usr/local/etc/php/php.ini
  #  links:
  #    - kitamatch-db
  #kitamatch-db:
  #  container_name: kitamatch-db
  #  image: mariadb
  #  restart: always
  #  volumes:
  #    - kitamatch-db:/var/lib/mysql
  #  environment:
  #    - TZ=Asia/Tokyo
  #    - MYSQL_DATABASE=${KITAMATCH_DATABASE}
  #    - MYSQL_USER=${KITAMATCH_DB_USER}
  #    - MYSQL_PASSWORD=${KITAMATCH_DB_PASSWORD}
  #    - MYSQL_ROOT_PASSWORD=${KITAMATCH_DB_ROOT_PASSWORD}
  #  networks:
  #    - docker-network

  # u16procon:
  #   container_name: u16procon
  #   image: wordpress:latest
  #   restart: always
  #   ports:
  #     - "80"
  #   networks:
  #     - docker-network
  #   environment:
  #     - WORDPRESS_DB_HOST=u16procon-db
  #     - WORDPRESS_DB_USER=${U16PROCON_DB_USER}
  #     - WORDPRESS_DB_PASSWORD=${U16PROCON_DB_PASSWORD}
  #     - WORDPRESS_DEBUG=true
  #     - VIRTUAL_HOST=u16procon.sinohiro.f5.si
  #     - LETSENCRYPT_HOST=u16procon.sinohiro.f5.si
  #     - LETSENCRYPT_EMAIL=sinohiro966@gmail.com
  #   volumes:
  #     - u16procon:/var/www/html
  #     - ./php/php.ini:/usr/local/etc/php/php.ini
  #   links:
  #     - u16procon-db
  # u16procon-db:
  #   container_name: u16procon-db
  #   image: mariadb
  #   restart: always
  #   volumes:
  #     - u16procon-db:/var/lib/mysql
  #   environment:
  #     - TZ=Asia/Tokyo
  #     - MYSQL_DATABASE=${U16PROCON_DATABASE}
  #     - MYSQL_USER=${U16PROCON_DB_USER}
  #     - MYSQL_PASSWORD=${U16PROCON_DB_PASSWORD}
  #     - MYSQL_ROOT_PASSWORD=${U16PROCON_DB_ROOT_PASSWORD}
  #   networks:
  #     - docker-network

  # syorifactory-proxy:
  #   container_name: syorifactory-proxy
  #   image: nginx:latest
  #   restart: always
  #   ports:
  #     - "25566:25566"
  #   networks:
  #     docker-network:
  #       ipv4_address: 172.19.0.12
  #   environment:
  #     - VIRTUAL_HOST=sinohiro.f5.si
  #     - VIRTUAL_PORT=25566
  #     - LETSENCRYPT_HOST=sinohiro.f5.si
  #     - LETSENCRYPT_EMAIL=sinohiro966@gmail.com
  #   volumes:
  #     - ./nginx/proxy/syorifactory_proxy.conf:/etc/nginx/nginx.conf

  # syorifactory-map-proxy:
  #   container_name: syorifactory-map-proxy
  #   image: nginx:latest
  #   restart: always
  #   ports:
  #     - "80"
  #   networks:
  #     docker-network:
  #       ipv4_address: 172.19.0.13
  #   environment:
  #     - VIRTUAL_HOST=sfmap.sinohiro.f5.si
  #     - LETSENCRYPT_HOST=sfmap.sinohiro.f5.si
  #     - LETSENCRYPT_EMAIL=sinohiro966@gmail.com
  #   volumes:
  #     - ./nginx/proxy/syorifactory-map_proxy.conf:/etc/nginx/conf.d/my_proxy.conf

  # nginx-proxy:
  #   #build:
  #   #  context: ./nginx/proxy
  #   container_name: nginx-proxy
  #   image: jwilder/nginx-proxy
  #   environment:
  #     - ENABLE_IPV6=true
  #   restart: always
  #   privileged: true
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - certs:/etc/nginx/certs:ro
  #     - vhost:/etc/nginx/vhost.d
  #     - html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./nginx/proxy/my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf
  #   networks:
  #     docker-network:
  #       ipv4_address: 172.19.0.10

  # letsencrypt:
  #   image: nginxproxy/acme-companion
  #   container_name: letsencrypt
  #   environment:
  #     - DEFAULT_EMAIL=sinohiro966@gmail.com
  #     - NGINX_PROXY_CONTAINER=nginx-proxy
  #   volumes:
  #     - acme:/etc/acme.sh
  #     - certs:/etc/nginx/certs
  #     - vhost:/etc/nginx/vhost.d
  #     - html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   restart: always
  #   networks:
  #     docker-network:
  #       ipv4_address: 172.19.0.11

networks:
  docker-network:
    name: sinohiro-server
    # IPアドレス管理（IPAM）の設定
    ipam:
      # IPAMドライバーを指定
      driver: default

      # ネットワークのサブネット設定
      config:
        - subnet: 172.19.0.0/24

volumes:
  nuxt_node_modules:

# volumes:
  # certs:
  # vhost:
  # html:
  # acme:
  # ecloud:
  #   driver_opts:
  #     type: none
  #     device: /mnt/sinohiro-web/sinohiroHP-docker/ecloud
  #     o: bind
  # ecloud-db: 
  #   driver_opts:
  #     type: none
  #     device: /mnt/sinohiro-web/sinohiroHP-docker/ecloud-db
  #     o: bind
  # geekcast: 
  #   driver_opts:
  #     type: none
  #     device: /mnt/sinohiro-server_storage/sinohiroHP-docker/geekcast
  #     o: bind
  # geekcast-db: 
  #   driver_opts:
  #     type: none
  #     device: /mnt/sinohiro-server_storage/sinohiroHP-docker/geekcast-db
  #     o: bind
  # u16procon: 
  #   driver_opts:
  #     type: none
  #     device: /mnt/sinohiro-server_storage/sinohiroHP-docker/u16procon
  #     o: bind
  # u16procon-db: 
  #   driver_opts:
  #     type: none
  #     device: /mnt/sinohiro-server_storage/sinohiroHP-docker/u16procon-db
  #     o: bind
